{"ast":null,"code":"var _jsxFileName = \"/home/muhammad-talal/Cyber Security And Web Development/Cyber Security And Web Development Projects/ReactJs/Projects /todoList/todo/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for input text\n  // انپٹ ٹیکسٹ کے لیے اسٹیٹ\n  const [inputText, setInputText] = useState('');\n\n  // State for the array of to-do items\n  // ٹو-ڈو آئٹمز کی آرے کے لیے اسٹیٹ\n  const [todoArray, setTodoArray] = useState([]);\n\n  // State for the current filter\n  // موجودہ فلٹر کے لیے اسٹیٹ\n  const [filter, setFilter] = useState('all');\n\n  // Handle input field changes\n  // انپٹ فیلڈ کی تبدیلیوں کو ہینڈل کریں\n  const handleInputChange = e => {\n    setInputText(e.target.value);\n  };\n\n  // Handle adding a new to-do item\n  // ن\n  const addTodo = () => {\n    if (inputText.trim()) {\n      // Check if the input text is not empty\n      // Create a new to-do item with a unique ID and default completion status\n      const newTodo = {\n        id: Math.random().toString(36).substr(2, 9),\n        // Unique ID\n        text: inputText.trim(),\n        completed: false // New items are not completed by default\n      };\n      // Add the new to-do item to the existing array\n      setTodoArray([...todoArray, newTodo]);\n      // Clear the input field after adding\n      setInputText('');\n    }\n  };\n\n  // Handle deleting a to-do item\n\n  const deleteTodo = id => {\n    // Filter out the item with the given ID\n    const newTodoArray = todoArray.filter(todo => todo.id !== id);\n    // Update the state with the filtered list\n    setTodoArray(newTodoArray);\n  };\n\n  // Handle toggling completion status\n\n  const toggleCompletion = id => {\n    // Map over the existing todos and update the completion status of the item with the given ID\n    const updatedTodos = todoArray.map(todo => todo.id === id ? {\n      ...todo,\n      completed: !todo.completed\n    } : todo);\n    // Update the state with the modified todos\n    setTodoArray(updatedTodos);\n  };\n\n  // Filter todos based on the current filter\n\n  const filteredTodos = todoArray.filter(todo => {\n    if (filter === 'all') return true; // Show all items\n    if (filter === 'active') return !todo.completed; // Show only active items\n    if (filter === 'completed') return todo.completed; // Show only completed items\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ToDoApp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"filter-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'all' ? 'active' : ''}`,\n            onClick: () => setFilter('all'),\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'active' ? 'active' : ''}`,\n            onClick: () => setFilter('active'),\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-btn ${filter === 'completed' ? 'active' : ''}`,\n            onClick: () => setFilter('completed'),\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: inputText,\n          onChange: handleInputChange,\n          type: \"text\",\n          className: \"todo-input\",\n          placeholder: \"Add a new task...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-btn\",\n          onClick: addTodo,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo-list\",\n        children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"todo-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"todo-checkbox\",\n            checked: todo.completed,\n            onChange: () => toggleCompletion(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `todo-text ${todo.completed ? 'completed' : ''}`,\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: () => deleteTodo(todo.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"remaining-tasks\",\n          children: [filteredTodos.length, \" item\", filteredTodos.length !== 1 ? 's' : '', \" left\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"F/I2Q9qlLAXV2q4ERCY5kud2dMU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","todoArray","setTodoArray","filter","setFilter","handleInputChange","e","target","value","addTodo","trim","newTodo","id","Math","random","toString","substr","text","completed","deleteTodo","newTodoArray","todo","toggleCompletion","updatedTodos","map","filteredTodos","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","type","placeholder","checked","length","_c","$RefreshReg$"],"sources":["/home/muhammad-talal/Cyber Security And Web Development/Cyber Security And Web Development Projects/ReactJs/Projects /todoList/todo/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  // State for input text\n  // انپٹ ٹیکسٹ کے لیے اسٹیٹ\n  const [inputText, setInputText] = useState('');\n\n  // State for the array of to-do items\n  // ٹو-ڈو آئٹمز کی آرے کے لیے اسٹیٹ\n  const [todoArray, setTodoArray] = useState([]);\n\n  // State for the current filter\n  // موجودہ فلٹر کے لیے اسٹیٹ\n  const [filter, setFilter] = useState('all');\n\n  // Handle input field changes\n  // انپٹ فیلڈ کی تبدیلیوں کو ہینڈل کریں\n  const handleInputChange = (e) => {\n    setInputText(e.target.value);\n  };\n\n  // Handle adding a new to-do item\n  // ن\n  const addTodo = () => {\n    if (inputText.trim()) { // Check if the input text is not empty\n      // Create a new to-do item with a unique ID and default completion status\n      const newTodo = {\n        id: Math.random().toString(36).substr(2, 9), // Unique ID\n        text: inputText.trim(),\n        completed: false, // New items are not completed by default\n      };\n      // Add the new to-do item to the existing array\n      setTodoArray([...todoArray, newTodo]);\n      // Clear the input field after adding\n      setInputText('');\n    }\n  };\n\n  // Handle deleting a to-do item\n\n  const deleteTodo = (id) => {\n    // Filter out the item with the given ID\n    const newTodoArray = todoArray.filter(todo => todo.id !== id);\n    // Update the state with the filtered list\n    setTodoArray(newTodoArray);\n  };\n\n  // Handle toggling completion status\n\n  const toggleCompletion = (id) => {\n    // Map over the existing todos and update the completion status of the item with the given ID\n    const updatedTodos = todoArray.map(todo =>\n      todo.id === id ? { ...todo, completed: !todo.completed } : todo\n    );\n    // Update the state with the modified todos\n    setTodoArray(updatedTodos);\n  };\n\n  // Filter todos based on the current filter\n\n  const filteredTodos = todoArray.filter(todo => {\n    if (filter === 'all') return true; // Show all items\n    if (filter === 'active') return !todo.completed; // Show only active items\n    if (filter === 'completed') return todo.completed; // Show only completed items\n    return true;\n  });\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <header className=\"header\">\n          <h1>ToDoApp</h1>\n          <nav className=\"filter-nav\">\n            <button\n              className={`filter-btn ${filter === 'all' ? 'active' : ''}`}\n              onClick={() => setFilter('all')}\n            >\n              All\n            </button>\n            <button\n              className={`filter-btn ${filter === 'active' ? 'active' : ''}`}\n              onClick={() => setFilter('active')}\n            >\n              Active\n            </button>\n            <button\n              className={`filter-btn ${filter === 'completed' ? 'active' : ''}`}\n              onClick={() => setFilter('completed')}\n            >\n              Completed\n            </button>\n          </nav>\n        </header>\n        <div className=\"todo-input-container\">\n          <input\n            value={inputText}\n            onChange={handleInputChange}\n            type=\"text\"\n            className=\"todo-input\"\n            placeholder=\"Add a new task...\"\n          />\n          <button className=\"add-btn\" onClick={addTodo}>Add</button>\n        </div>\n        <ul className=\"todo-list\">\n          {filteredTodos.map(todo => (\n            <li key={todo.id} className=\"todo-item\">\n              <input\n                type=\"checkbox\"\n                className=\"todo-checkbox\"\n                checked={todo.completed}\n                onChange={() => toggleCompletion(todo.id)}\n              />\n              <span className={`todo-text ${todo.completed ? 'completed' : ''}`}>\n                {todo.text}\n              </span>\n              <button className=\"delete-btn\" onClick={() => deleteTodo(todo.id)}>\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n        <footer className=\"footer\">\n          <span className=\"remaining-tasks\">\n            {filteredTodos.length} item{filteredTodos.length !== 1 ? 's' : ''} left\n          </span>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}